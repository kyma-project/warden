// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/docker/cli/cli/config/types"
	mock "github.com/stretchr/testify/mock"
)

// ImageValidatorService is an autogenerated mock type for the ImageValidatorService type
type ImageValidatorService struct {
	mock.Mock
}

// Validate provides a mock function with given fields: ctx, image, imagePullCredentials
func (_m *ImageValidatorService) Validate(ctx context.Context, image string, imagePullCredentials map[string]types.AuthConfig) error {
	ret := _m.Called(ctx, image, imagePullCredentials)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, map[string]types.AuthConfig) error); ok {
		r0 = rf(ctx, image, imagePullCredentials)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewImageValidatorService creates a new instance of ImageValidatorService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewImageValidatorService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ImageValidatorService {
	mock := &ImageValidatorService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
